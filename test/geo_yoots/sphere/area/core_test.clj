(ns geo-yoots.sphere.area.core-test
  (:require [clojure.test :refer :all]
            [clojure.core.matrix :as mtx]  
            [geo-yoots.test-util :as test.util]
            [geo-yoots.constants :as geo.const]
            [geo-yoots.util.core :as geo.util]
            [geo-yoots.sphere.area.core :as geo.sphere.area]))



;; ----
;; - Rotation Matrix Tests
;; ----





;; ----
;; - Shoelace Aglo Tests
;; ----

;; Testcase Source: https://en.wikipedia.org/wiki/Shoelace_formula

(def mtx1
  (hash-map
    :mtx  (mtx/matrix
            [[2  4]
             [3 -8]
             [1  2]])
    :area 7.0))


(def mtx2
  (hash-map
    :mtx  (mtx/matrix
            [[ 3  4]
             [ 5 11]
             [12  8]
             [ 9  5]
             [ 5  6]])
    :area 30.0))

(def mtx3
  (hash-map
    :mtx  (mtx/matrix
            [[ 2  7]
             [10  1]
             [ 8  6]
             [11  7]
             [ 7 10]])
    :area 32.0))


(deftest shoelace-apply-test
  (let [cases [mtx1 mtx2 mtx3]]
    (testing "Matrices"
      (doseq [[i _case] (map list (range (count cases)) cases)]
        (testing (format "Case: %d" i)
          (is (= (geo.sphere.area/apply-shoelace (:mtx _case)) (:area _case))))))))


;; ----
;; - Area Tests
;; ---

(def poly1
  (hash-map
    :poly [[ 1.000000  0.000000]
           [ 0.000000  1.000000]
           [-1.000000  0.000000]
           [ 0.000000 -1.000000]]
    :area 24740.08))

(def poly2
  (hash-map
    :poly [[-15.290669  179.159774]
           [-11.469978  179.626362]
           [ -9.559677 -177.255858]
           [-13.678565 -174.857297]
           [-17.228967 -177.598549]]
    :area 338550.27))

(def poly3
  (hash-map
    :poly [[29.99906170493383 -90.42725561653577]
           [29.99533640496636 -90.42696669066818]
           [29.99335867823883 -90.41534213633119]
           [29.99018024847489 -90.40729174699797]
           [29.98605085649548 -90.40184120993824]
           [29.98085079882353 -90.39800724559494]
           [29.97928333955896 -90.39690344594437]
           [29.98075305584882 -90.39218453030135]
           [29.98740135552484 -90.39608179446184]
           [29.99207957444455 -90.39965704606774]
           [29.99557763234701 -90.40881580618841]
           [29.99800787798624 -90.41721422776384]
           [29.99906170493383 -90.42725561653577]]
    :area 1.93))

(def poly4
  (hash-map
    :poly [[29.993094999999997 -90.460828]
           [29.992001000000002 -90.454835]
           [29.990195999999997 -90.446007]
           [29.99019           -90.43206]
           [29.994350999999995 -90.432192]
           [29.994384999999994 -90.434352]
           [29.995379          -90.445602]
           [29.996012000000007 -90.451396]
           [29.997289999999992 -90.45873]
           [29.997392000000005 -90.458726]
           [29.997392000000005 -90.45888]
           [29.997426000000004 -90.459535]
           [29.993094999999997 -90.460828]]
    :area 1.41))

(def poly5
  (hash-map
    :poly [[52.971092          4.7655129999999986]
           [52.95706000000001  4.764809000000014]
           [52.95607699999999  4.769634999999994]
           [52.942519000000004 4.772424000000001]
           [52.94242299999999  4.7877929999999935]
           [52.94961699999999  4.793407000000002]
           [52.95269300000001  4.788003000000003]
           [52.95866000000001  4.804949999999991]
           [52.970844          4.800051999999994]
           [52.971092          4.7655129999999986]]
    :area 6.146))

(def poly6
  (hash-map
    :poly [[17.695130000000006 83.26754399999999]
           [17.687502999999992 83.277581]
           [17.686155          83.28386499999999]
           [17.686318          83.291676]
           [17.690638000000007 83.29215099999999]
           [17.693826          83.284854]
           [17.694616999999994 83.28119300000003]
           [17.705155000000005 83.279695]
           [17.706817          83.277716]
           [17.713992000000005 83.27290199999999]
           [17.714690000000004 83.26904200000001]
           [17.70894           83.26161400000001]
           [17.695130000000006 83.26754399999999]]
    :area 4.69))

(def poly7
  (hash-map
    :poly [[19.98498475616872 -91.79134362468773]
           [19.9740615493575  -92.04057221275009]
           [20.03541307963264 -92.14643923513471]
           [19.95465060060891 -92.65622000414476]
           [19.45081690538742 -92.5158885284788]
           [19.66032206271934 -91.76904227116374]
           [19.98498475616872 -91.79134362468773]]
    :area 4209.65))

(def poly8
  (hash-map
    :poly [[45.61253720661773 13.76805534791982]
           [45.6081753117228  13.77841955800301]
           [45.61382065985224 13.78507279772183]
           [45.61654418007323 13.77955383415076]
           [45.61253720661773 13.76805534791982]]
    :area 0.61))

(def poly9
  (hash-map
    :poly [[34.23897057428315 132.5638278053062]
           [34.2616479343     132.524814256]
           [34.260657554      132.515103735]
           [34.2496936292     132.512478625]
           [34.2356858612     132.529040195]
           [34.2223250083     132.51815939]
           [34.2096925593     132.531038298]
           [34.22741372813305 132.5547173987204]
           [34.23331328810249 132.5467411848424]
           [34.23754922026851 132.5505916255833]
           [34.23731528410036 132.5547430421426]
           [34.23449131109498 132.5599368463871]
           [34.23897057428315 132.5638278053062]]
    :area 13.12))

(def poly10
  (hash-map
    :poly [[2.988796580801094 101.4027996541245]
           [3.045382892157539 101.3796574154713]
           [3.056749706005817 101.3581881735915]
           [3.080301624046995 101.3491098257278]
           [3.12320917128509  101.3089142074387]
           [3.109044296918606 101.2935373933977]
           [3.064111381047294 101.3359961658755]
           [3.052526194703154 101.3388075055149]
           [3.001018576505298 101.340942216169]
           [2.98341169508234  101.3109068220205]
           [2.922723283922333 101.2789262903789]
           [2.908721947908669 101.2862037356386]
           [2.953388875062547 101.3285886380902]
           [2.988796580801094 101.4027996541245]]
    :area 99.24))

(def poly11
  (hash-map
    :poly [[89.000000    0.000000]
           [89.000000   90.000000]
           [89.000000 -180.000000]
           [89.000000  -90.000000]]
    :area 24775.83))

(def poly12
  (hash-map
    :poly [[ 0.000000 -179.000000]
           [-1.000000  180.000000]
           [ 0.000000  179.000000]
           [ 1.000000  180.000000]]
    :area 24764.63))

(def poly13
  (hash-map
    :poly [[-89.000000   0.000000]
           [-89.000000  90.000000]
           [-89.000000 180.000000]
           [-89.000000 -90.000000]]
    :area 24723.95))


(deftest area-test
  (let [cases [poly1 poly2 poly3 poly4 poly5 poly6 poly7 poly8 poly9 poly10 poly11 poly12 poly13]]
    (testing "Areas"
      (doseq [[i _case] (map list (range (count cases)) cases)]
        (testing (format "Case: %d" i)
          (test.util/compare-area (:area _case) (geo.sphere.area/polygon (:poly _case))))))))
